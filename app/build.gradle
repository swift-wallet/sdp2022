plugins {
    id 'com.android.application'
    id 'jacoco'
    id 'com.google.gms.google-services'
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdk 31

    defaultConfig {
        applicationId "com.sdp.swiftwallet"
        minSdk 24
        targetSdk 31
        versionCode 1
        versionName "1.0"
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "com.sdp.swiftwallet.hilt.CustomTestRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
	      debug{
	          testCoverageEnabled true
	      }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildFeatures {
        viewBinding true
        dataBinding true
    }
}

dependencies {
    implementation 'androidx.test.espresso:espresso-idling-resource:3.4.0'
    implementation 'com.google.ar:core:1.25.0'
    def fragment_version = "1.4.1"

    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'com.google.firebase:firebase-firestore:24.1.0'
    implementation 'androidx.navigation:navigation-fragment:2.4.1'
    implementation 'androidx.navigation:navigation-ui:2.4.1'
    implementation 'com.android.volley:volley:1.2.1'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'com.journeyapps:zxing-android-embedded:4.1.0'
    implementation 'org.web3j:core:4.8.7'

    implementation 'com.google.firebase:firebase-auth:21.0.3'
    implementation 'com.google.android.gms:play-services-auth:20.1.0'
    implementation 'androidx.annotation:annotation:1.2.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.3.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1'
    implementation "androidx.fragment:fragment:$fragment_version"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'
    implementation 'com.google.dagger:hilt-android:2.41'
    annotationProcessor 'com.google.dagger:hilt-compiler:2.41'

    testImplementation "org.mockito:mockito-core:4.4.0"
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation "org.mockito:mockito-core:4.4.0"
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation 'androidx.test:runner:1.4.0'
    androidTestImplementation 'androidx.test:rules:1.4.0'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.4.0'
    androidTestImplementation 'com.adevinta.android:barista:4.2.0'
    debugImplementation "androidx.fragment:fragment-testing:$fragment_version"
    androidTestImplementation "androidx.navigation:navigation-testing:2.4.1"

    // For instrumentation tests
    androidTestImplementation  'com.google.dagger:hilt-android-testing:2.41'
    androidTestAnnotationProcessor 'com.google.dagger:hilt-compiler:2.41'

    // For local unit tests
    testImplementation 'com.google.dagger:hilt-android-testing:2.41'
    testAnnotationProcessor 'com.google.dagger:hilt-compiler:2.41'
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
    jacoco.excludes = ['jdk.internal.*']
}
task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {
    reports {
	    xml.enabled = true
        html.enabled = true
    }

    def fileFilter = [
        // data binding
        '**/databinding/*',
        'android/databinding/**/*.class',
        '**/android/databinding/*Binding.class',
        '**/android/databinding/*',
        '**/androidx/databinding/*',
        '**/BR.*',
        // android
        '**/R.class',
        '**/R$*.class',
        '**/BuildConfig.*',
        '**/Manifest*.*',
        '**/*Test*.*',
        'android/**/*.*',
        // Exclude Hilt generated classes
        '**/*Hilt*.*',
        'hilt_aggregated_deps/**',
        '**/*_Factory.class',
        '**/*_MembersInjector.class'
    ]
    def debugTree = fileTree(dir: "$project.buildDir/intermediates/javac/debug/classes", excludes: fileFilter)
    def mainSrc = "$project.projectDir/src/main/java"

    sourceDirectories.setFrom(files([mainSrc]))
    classDirectories.setFrom(files([debugTree]))
    executionData.setFrom(fileTree(dir: project.buildDir, includes: [
            'outputs/unit_test_code_coverage/debugUnitTest/testDebugUnitTest.exec',
            'outputs/code_coverage/debugAndroidTest/connected/*/coverage.ec'
    ]))
}

connectedCheck {
    finalizedBy jacocoTestReport
}

// Do not remove this part, required because protobuf conflicts with firebase when using Espresso
configurations.configureEach {
    exclude group: "com.google.protobuf", module: "protobuf-lite"
}

